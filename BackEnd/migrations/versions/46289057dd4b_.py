"""empty message

Revision ID: 46289057dd4b
Revises: 
Create Date: 2023-04-20 20:13:34.865825

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '46289057dd4b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('caregiver',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=False),
    sa.Column('address', sa.String(length=100), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=False),
    sa.Column('intro', sa.Text(), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('token', sa.String(length=32), nullable=True),
    sa.Column('token_expiration', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    with op.batch_alter_table('caregiver', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_caregiver_token'), ['token'], unique=True)

    op.create_table('elder',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=False),
    sa.Column('address', sa.String(length=100), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('token', sa.String(length=32), nullable=True),
    sa.Column('token_expiration', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    with op.batch_alter_table('elder', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_elder_token'), ['token'], unique=True)

    op.create_table('service_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('kind', sa.String(length=50), nullable=False),
    sa.Column('sub_type', sa.String(length=50), nullable=False),
    sa.Column('desc', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('remarks', sa.String(length=255), nullable=True),
    sa.Column('is_delete', sa.Boolean(), nullable=False),
    sa.Column('caregiver_id', sa.Integer(), nullable=False),
    sa.Column('st_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['caregiver_id'], ['caregiver.id'], ),
    sa.ForeignKeyConstraint(['st_id'], ['service_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('service_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('service_remark', sa.String(length=100), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('comment', sa.String(length=100), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('elder_id', sa.Integer(), nullable=False),
    sa.Column('sid', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['elder_id'], ['elder.id'], ),
    sa.ForeignKeyConstraint(['sid'], ['service.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('service_record')
    op.drop_table('service')
    op.drop_table('service_type')
    with op.batch_alter_table('elder', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_elder_token'))

    op.drop_table('elder')
    with op.batch_alter_table('caregiver', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_caregiver_token'))

    op.drop_table('caregiver')
    # ### end Alembic commands ###
